"DREHHWFzc2V0cy9mb250cy9Qb3BwaW5zLUJvbGQudHRmDAENAQcFYXNzZXQHHWFzc2V0cy9mb250cy9Qb3BwaW5zLUJvbGQudHRmByBhc3NldHMvZm9udHMvUG9wcGlucy1SZWd1bGFyLnR0ZgwBDQEHBWFzc2V0ByBhc3NldHMvZm9udHMvUG9wcGlucy1SZWd1bGFyLnR0ZgchYXNzZXRzL2ZvbnRzL1BvcHBpbnMtU2VtaUJvbGQudHRmDAENAQcFYXNzZXQHIWFzc2V0cy9mb250cy9Qb3BwaW5zLVNlbWlCb2xkLnR0ZgcZYXNzZXRzL2ltYWdlcy9hbmRyb2lkLnN2ZwwBDQEHBWFzc2V0Bxlhc3NldHMvaW1hZ2VzL2FuZHJvaWQuc3ZnBxhhc3NldHMvaW1hZ2VzL2Rldl9mZi5naWYMAQ0BBwVhc3NldAcYYXNzZXRzL2ltYWdlcy9kZXZfZmYuZ2lmBx1hc3NldHMvaW1hZ2VzL2Rldl9mbHV0dGVyLmdpZgwBDQEHBWFzc2V0Bx1hc3NldHMvaW1hZ2VzL2Rldl9mbHV0dGVyLmdpZgcZYXNzZXRzL2ltYWdlcy9tb29uR2lmLmdpZgwBDQEHBWFzc2V0Bxlhc3NldHMvaW1hZ2VzL21vb25HaWYuZ2lmByBhc3NldHMvaW1hZ2VzL3BvcnRmb2xpb19pY29uLnBuZwwBDQEHBWFzc2V0ByBhc3NldHMvaW1hZ2VzL3BvcnRmb2xpb19pY29uLnBuZwcYYXNzZXRzL2ltYWdlcy9yZXN1bWUuZ2lmDAENAQcFYXNzZXQHGGFzc2V0cy9pbWFnZXMvcmVzdW1lLmdpZgcXYXNzZXRzL2ltYWdlcy9ydWxlci5zdmcMAQ0BBwVhc3NldAcXYXNzZXRzL2ltYWdlcy9ydWxlci5zdmcHGGFzc2V0cy9pbWFnZXMvc2xpZGVyLnN2ZwwBDQEHBWFzc2V0Bxhhc3NldHMvaW1hZ2VzL3NsaWRlci5zdmcHGGFzc2V0cy9pbWFnZXMvc3VuR2lmLmdpZgwBDQEHBWFzc2V0Bxhhc3NldHMvaW1hZ2VzL3N1bkdpZi5naWYHMnBhY2thZ2VzL2N1cGVydGlub19pY29ucy9hc3NldHMvQ3VwZXJ0aW5vSWNvbnMudHRmDAENAQcFYXNzZXQHMnBhY2thZ2VzL2N1cGVydGlub19pY29ucy9hc3NldHMvQ3VwZXJ0aW5vSWNvbnMudHRmBzlwYWNrYWdlcy9mb250X2F3ZXNvbWVfZmx1dHRlci9saWIvZm9udHMvZmEtYnJhbmRzLTQwMC50dGYMAQ0BBwVhc3NldAc5cGFja2FnZXMvZm9udF9hd2Vzb21lX2ZsdXR0ZXIvbGliL2ZvbnRzL2ZhLWJyYW5kcy00MDAudHRmBzpwYWNrYWdlcy9mb250X2F3ZXNvbWVfZmx1dHRlci9saWIvZm9udHMvZmEtcmVndWxhci00MDAudHRmDAENAQcFYXNzZXQHOnBhY2thZ2VzL2ZvbnRfYXdlc29tZV9mbHV0dGVyL2xpYi9mb250cy9mYS1yZWd1bGFyLTQwMC50dGYHOHBhY2thZ2VzL2ZvbnRfYXdlc29tZV9mbHV0dGVyL2xpYi9mb250cy9mYS1zb2xpZC05MDAudHRmDAENAQcFYXNzZXQHOHBhY2thZ2VzL2ZvbnRfYXdlc29tZV9mbHV0dGVyL2xpYi9mb250cy9mYS1zb2xpZC05MDAudHRmBzFwYWNrYWdlcy9pY29uc2F4X2ZsdXR0ZXIvZm9udHMvRmx1dHRlckljb25zYXgudHRmDAENAQcFYXNzZXQHMXBhY2thZ2VzL2ljb25zYXhfZmx1dHRlci9mb250cy9GbHV0dGVySWNvbnNheC50dGY="